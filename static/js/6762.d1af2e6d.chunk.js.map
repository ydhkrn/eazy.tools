{"version":3,"file":"static/js/6762.d1af2e6d.chunk.js","mappings":"oMAEqBA,EAAS,WAI5B,WAAYC,GAAmB,IAAD,4BAH9BC,eAAS,OACTC,WAAuB,GAAG,KAUnBC,IAAM,SAACC,GAAyC,IAA5BC,EAAS,uDAAG,KAC/BC,EAAU,EAAKC,WAAWH,GAChCI,EAAAA,aAAAA,QAAqBF,EAASG,KAAKC,UAAUL,IAC7C,EAAKH,WAAWS,KAAKP,EACvB,EAAE,KAEKQ,IAAM,SAASR,GAAgC,IAAD,EAC7CE,EAAU,EAAKC,WAAWH,GAChC,OAAOK,KAAKI,MAAmC,QAA9B,EAACL,EAAAA,aAAAA,QAAqBF,UAAQ,QAAI,OACrD,EAAE,KAEKQ,OAAS,SAACV,GACf,IAAME,EAAU,EAAKC,WAAWH,GAChCI,EAAAA,aAAAA,WAAwBF,GACxB,EAAKJ,WAAa,EAAKA,WAAWa,QAAO,SAACC,GAAC,OAAKA,IAAMZ,CAAG,GAC3D,EAAE,KAEKa,SAAW,WAChB,EAAKf,WAAWgB,SAAQ,SAACd,GAAG,OAAK,EAAKU,OAAOV,EAAI,IACjD,EAAKF,WAAa,EACpB,EA3BEiB,KAAKlB,UAAYD,CACnB,CAIC,OAJA,kCAED,SAAmBI,GACjB,MAAM,GAAN,OAAUe,KAAKlB,UAAS,YAAIG,EAC9B,KAAC,EAV2B,E,mNCFvB,SAASgB,EAAmBC,GACjC,IACE,IAAMC,EAAWC,OAAkCF,GAC7CG,EAAU,mBAKhB,OAHAF,EAAQG,QAAQD,EAAS,KACzBF,EAAQI,WAAWF,IAEZ,CAGT,CAFE,MAAOG,GACP,OAAO,CACT,CACF,CAGO,IAAMC,GAAa,qDACjBN,QAAmC,CAAC,EAAE,KAEtCG,QAAU,SAACrB,EAAaC,GAC7B,IAAMwB,EAAQxB,GAAQA,EAAKyB,YAAe,GAE1C,EAAKR,QAAQlB,GAAOyB,CACtB,EAAE,KAEKE,QAAU,SAAC3B,GAAW,OAAoB,EAAKkB,QAAQlB,IAAQ,EAAG,EAAD,KAEjEsB,WAAa,SAACtB,UACZ,EAAKkB,QAAQlB,EACtB,EAAE,KAEK4B,MAAQ,WACb,EAAKV,SAAU,IAAIM,GAAgBN,OACrC,CAAE,IAGSd,EAAeY,EAAmB,gBAC3CG,OAAOU,aACP,IAAIL,EAEKM,EAAiBd,EAAmB,kBAC7CG,OAAOY,eACP,IAAIP,C","sources":["shared/helpers/pageCache.ts","shared/helpers/webStorage.ts"],"sourcesContent":["import { LocalStorage } from \"shared/helpers/webStorage\";\n\nexport default class PageCache {\n  keyPrefix: string;\n  cachedKeys: string[] = [];\n\n  constructor(pathname: string) {\n    this.keyPrefix = pathname;\n  }\n\n  private getPageKey(key: string) {\n    return `${this.keyPrefix}-${key}`;\n  }\n\n  public set = (key: string, data: any = null): void => {\n    const pageKey = this.getPageKey(key);\n    LocalStorage.setItem(pageKey, JSON.stringify(data));\n    this.cachedKeys.push(key);\n  };\n\n  public get = <Result>(key: string): Result | null => {\n    const pageKey = this.getPageKey(key);\n    return JSON.parse(LocalStorage.getItem(pageKey) ?? \"null\");\n  };\n\n  public remove = (key: string): void => {\n    const pageKey = this.getPageKey(key);\n    LocalStorage.removeItem(pageKey);\n    this.cachedKeys = this.cachedKeys.filter((k) => k !== key);\n  };\n\n  public clearAll = () => {\n    this.cachedKeys.forEach((key) => this.remove(key));\n    this.cachedKeys = [];\n  };\n}\n","export function isStorageSupported(type: string): boolean {\n  try {\n    const storage = (window as { [key: string]: any })[type];\n    const testKey = \"__storage_test__\";\n\n    storage.setItem(testKey, \"1\");\n    storage.removeItem(testKey);\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n// Wrapper class for storage\nexport class MemoryStorage {\n  public storage: { [x: string]: string } = {};\n\n  public setItem = (key: string, data: string): void => {\n    const json = (data && data.toString()) || \"\";\n\n    this.storage[key] = json;\n  };\n\n  public getItem = (key: string): string | null => this.storage[key] || \"\";\n\n  public removeItem = (key: string): void => {\n    delete this.storage[key];\n  };\n\n  public clear = () => {\n    this.storage = new MemoryStorage().storage;\n  };\n}\n\nexport const LocalStorage = isStorageSupported(\"localStorage\")\n  ? window.localStorage\n  : new MemoryStorage();\n\nexport const SessionStorage = isStorageSupported(\"sessionStorage\")\n  ? window.sessionStorage\n  : new MemoryStorage();\n"],"names":["PageCache","pathname","keyPrefix","cachedKeys","set","key","data","pageKey","getPageKey","LocalStorage","JSON","stringify","push","get","parse","remove","filter","k","clearAll","forEach","this","isStorageSupported","type","storage","window","testKey","setItem","removeItem","error","MemoryStorage","json","toString","getItem","clear","localStorage","SessionStorage","sessionStorage"],"sourceRoot":""}