{"version":3,"file":"static/js/3792.b681dcb0.chunk.js","mappings":"yHAAO,SAASA,EAASC,GACvB,OAAQA,CACT,CAEM,SAASC,EAAMC,GAAmD,IAA7BC,EAA4B,uDAAH,EACnE,OAAOJ,EAASA,EAASG,GAAKE,QAAQD,GACvC,C,gNCKc,SAASE,EACtBC,EACAC,GAEA,IAAMC,GAAkBC,EAAAA,EAAAA,aA8B1B,SAAyCH,GACvC,OAAO,SACLI,EADK,GAGkC,IAAD,eADrCC,EACqC,KAD/BC,EAC+B,KACtC,OAAQD,GACN,KAAKE,EAAAA,qBAAAA,cACH,OAAO,kBACFH,GADL,IAEEI,WAAYF,IAGhB,KAAKC,EAAAA,qBAAAA,sBAA6C,IAAD,EACzCE,EAAgBC,OAAON,EAAMI,YAC7BG,EAAmBX,EAAYY,OAAOH,GAG5C,OACEA,EAAcI,OAAS,IACvBpB,EAAAA,EAAAA,UAAQ,UAACW,EAAMU,0BAAP,aAAC,EAA0BD,QAAU,GACjB,IAA5BF,EAAiBE,OAEVT,GAGF,kBACFA,GADL,IAEEU,mBAAoBH,IAGxB,QACE,OAAOP,EAEZ,CACF,CAhEqCW,CAAcf,GAAc,CAC9DA,EACAC,IAEF,GAA0Be,EAAAA,EAAAA,YAAWd,EAAiB,CACpDM,WAAY,GACZM,mBAAoB,OAFtB,eAAOV,EAAP,KAAca,EAAd,KAKMC,GAA2Bf,EAAAA,EAAAA,cAC/BgB,EAAAA,EAAAA,WACE,kBAAMF,EAAS,CAACV,EAAAA,qBAAAA,uBAAhB,GACA,KAEF,IAUF,OAAO,kBACFH,GADL,IAEEgB,uBAT6B,SAC7BC,GAEAJ,EAAS,CAACV,EAAAA,qBAAAA,cAAoCc,EAAMC,OAAOC,QAC3DL,GACD,GAMF,C,wBCtCM,IAAKX,E,0DAAZ,SAAYA,GAAAA,EAAAA,EAAAA,cAAAA,GAAAA,gBAAAA,EAAAA,EAAAA,sBAAAA,GAAAA,uBAAAA,CAAZ,CAAYA,IAAAA,EAAAA,CAAAA,G","sources":["shared/helpers/number.ts","shared/hooks/fuzzySearch/index.ts","shared/hooks/fuzzySearch/types.ts"],"sourcesContent":["export function toNumber(x: any) {\n  return +x;\n}\n\nexport function round(num: number | string, fractionDigits: number = 2) {\n  return toNumber(toNumber(num).toFixed(fractionDigits));\n}\n","import { useCallback, useReducer } from \"react\";\nimport Fuse from \"fuse.js\";\n\nimport {\n  E_FuzzySearchActions,\n  T_FuzzySearchAction,\n  T_FuzzySearchState\n} from \"./types\";\nimport { debounce } from \"shared/helpers/optimization\";\nimport { toNumber } from \"shared/helpers/number\";\n\nexport default function useFuzzySearch<T_SearchListItem>(\n  fuzzySearch: Fuse<T_SearchListItem>,\n  searchList: T_SearchListItem[]\n) {\n  const memoizedReducer = useCallback(createReducer(fuzzySearch), [\n    fuzzySearch,\n    searchList\n  ]);\n  const [state, dispatch] = useReducer(memoizedReducer, {\n    inputValue: \"\",\n    fuzzySearchResults: null\n  });\n\n  const updateFuzzySearchResults = useCallback(\n    debounce(\n      () => dispatch([E_FuzzySearchActions.setFuzzySearchResults]),\n      200 // Update search results if 100ms passed after user has stopped typing\n    ),\n    []\n  );\n\n  const handleInputValueChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    dispatch([E_FuzzySearchActions.setInputValue, event.target.value]);\n    updateFuzzySearchResults();\n  };\n\n  return {\n    ...state,\n    handleInputValueChange\n  };\n}\n\nfunction createReducer<T_SearchListItem>(fuzzySearch: Fuse<T_SearchListItem>) {\n  return function searchReducer(\n    state: T_FuzzySearchState<T_SearchListItem>,\n    [type, payload]: T_FuzzySearchAction\n  ): T_FuzzySearchState<T_SearchListItem> {\n    switch (type) {\n      case E_FuzzySearchActions.setInputValue: {\n        return {\n          ...state,\n          inputValue: payload\n        };\n      }\n      case E_FuzzySearchActions.setFuzzySearchResults: {\n        const inputValueStr = String(state.inputValue);\n        const newSearchResults = fuzzySearch.search(inputValueStr);\n\n        // Do not update state if new search results are empty\n        if (\n          inputValueStr.length > 2 &&\n          toNumber(state.fuzzySearchResults?.length) > 1 &&\n          newSearchResults.length === 0\n        ) {\n          return state;\n        }\n\n        return {\n          ...state,\n          fuzzySearchResults: newSearchResults\n        };\n      }\n      default:\n        return state;\n    }\n  };\n}\n","import Fuse from \"fuse.js\";\n\nimport { T_Nullable } from \"shared/types/generics\";\nimport { T_StringOrNumber } from \"shared/types/common\";\n\nexport enum E_FuzzySearchActions {\n  setInputValue,\n  setFuzzySearchResults\n}\n\nexport type T_FuzzySearchState<T_SearchListItem> = {\n  inputValue: T_StringOrNumber;\n  fuzzySearchResults: T_Nullable<Fuse.FuseResult<T_SearchListItem>[]>;\n};\n\nexport type T_FuzzySearchAction = [type: E_FuzzySearchActions, payload?: any];\n"],"names":["toNumber","x","round","num","fractionDigits","toFixed","useFuzzySearch","fuzzySearch","searchList","memoizedReducer","useCallback","state","type","payload","E_FuzzySearchActions","inputValue","inputValueStr","String","newSearchResults","search","length","fuzzySearchResults","createReducer","useReducer","dispatch","updateFuzzySearchResults","debounce","handleInputValueChange","event","target","value"],"sourceRoot":""}