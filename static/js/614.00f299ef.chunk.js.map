{"version":3,"file":"static/js/614.00f299ef.chunk.js","mappings":"yRAIO,SAASA,EAAsCC,GACpD,MAAMC,EAAMC,EAAAA,GAASD,MACfE,EAAa,CAACC,EAAuBH,IAM3C,OALID,GACFG,EAAWE,QACNL,EAAeM,KAAKC,GAAOH,EAAuBH,EAAKM,MAGvDJ,CACT,CAEO,SAASC,EACdI,EACAC,GAEA,MAAMC,EAAgBD,EAAWD,EAASG,QAAQF,GAAYD,GACxD,SAEJI,EAAQ,eACRC,EAAc,gBACdC,EAAe,KAEfC,EAAI,OACJC,EAAM,OACNC,EAAM,QACNC,EAAO,KAEPC,EAAI,WACJC,EAAU,UACVC,EAAS,IACTC,EAAG,YACHC,EAAW,aACXC,GACEd,EAEEe,EAAeC,EAAwBd,GACvCe,EAAWjB,EAAckB,SAAS,KAClCC,EAAcC,EAAAA,QAAeC,MAChCC,GAASA,EAAKvB,WAAagB,KACzB,CACHQ,YAAa,GACbC,YAAa,IAGf,MAAO,CACLC,cAAe3B,EAAS4B,QACxBC,SAAU5B,EACVgB,eACAZ,iBACAC,qBACGe,EACHd,KAAML,EAAckB,SAAS,MAC7BZ,OAAQN,EAAckB,SAAS,MAC/BX,OAAQP,EAAckB,SAAS,MAC/BD,WACAT,UACAC,OACAC,aACAC,YACAC,MACAC,cACAC,eACAc,QAAUvB,EAAO,GAAM,IAAOC,EAAS,GAAM,GAAK,GAClDuB,UAAYvB,EAAS,GAAM,IAAOC,EAAS,GAAM,EAAI,GACrDuB,UAAYvB,EAAS,GAAM,IAAM,GAErC,CAEO,MAAMwB,EAAoBf,EAAwBxB,EAAAA,GAASD,MAAMW,UAEjE,SAASc,EAAwBD,GACtC,OAAOA,EAAaiB,QAElB,WACA,UAEJ,C","sources":["shared/helpers/timeZone/index.ts"],"sourcesContent":["import { DateTime } from \"luxon\";\r\nimport worldCountries from \"shared/constants/worldCountries\";\r\nimport { T_ClockDataOfTimeZone } from \"./types\";\r\n\r\nexport function getClocksDataOfLocalAndOtherTimeZones(otherTimeZones?: string[]) {\r\n  const now = DateTime.now();\r\n  const clocksData = [getClockDataOfTimeZone(now)];\r\n  if (otherTimeZones) {\r\n    clocksData.push(\r\n      ...otherTimeZones.map((tz) => getClockDataOfTimeZone(now, tz))\r\n    );\r\n  }\r\n  return clocksData;\r\n}\r\n\r\nexport function getClockDataOfTimeZone(\r\n  datetime: DateTime,\r\n  timeZone?: string\r\n): T_ClockDataOfTimeZone {\r\n  const nowInTimeZone = timeZone ? datetime.setZone(timeZone) : datetime;\r\n  const {\r\n    // timeZone\r\n    zoneName,\r\n    offsetNameLong,\r\n    offsetNameShort,\r\n    // time\r\n    hour,\r\n    minute,\r\n    second,\r\n    isInDST,\r\n    // date\r\n    year,\r\n    monthShort,\r\n    monthLong,\r\n    day,\r\n    weekdayLong,\r\n    weekdayShort\r\n  } = nowInTimeZone;\r\n\r\n  const timeZoneName = standardizeTimeZoneName(zoneName);\r\n  const meridiem = nowInTimeZone.toFormat(\"a\");\r\n  const countryInfo = worldCountries.find(\r\n    (info) => info.timeZone === timeZoneName\r\n  ) || {\r\n    countryCode: \"\",\r\n    countryName: \"\"\r\n  };\r\n\r\n  return {\r\n    timeISOString: datetime.toISO(),\r\n    isLocal: !timeZone,\r\n    timeZoneName,\r\n    offsetNameLong,\r\n    offsetNameShort,\r\n    ...countryInfo,\r\n    hour: nowInTimeZone.toFormat(\"hh\"),\r\n    minute: nowInTimeZone.toFormat(\"mm\"),\r\n    second: nowInTimeZone.toFormat(\"ss\"),\r\n    meridiem,\r\n    isInDST,\r\n    year,\r\n    monthShort,\r\n    monthLong,\r\n    day,\r\n    weekdayLong,\r\n    weekdayShort,\r\n    hourDeg: (hour / 12) * 360 + (minute / 60) * 30 + 90,\r\n    minuteDeg: (minute / 60) * 360 + (second / 60) * 6 + 90,\r\n    secondDeg: (second / 60) * 360 + 90\r\n  };\r\n}\r\n\r\nexport const localTimeZoneName = standardizeTimeZoneName(DateTime.now().zoneName);\r\n\r\nexport function standardizeTimeZoneName(timeZoneName: string) {\r\n  return timeZoneName.replace(\r\n    // TODO: Stupid Chrome https://bugs.chromium.org/p/chromium/issues/detail?id=580195\r\n    \"Calcutta\",\r\n    \"Kolkata\"\r\n  );\r\n}\r\n"],"names":["getClocksDataOfLocalAndOtherTimeZones","otherTimeZones","now","DateTime","clocksData","getClockDataOfTimeZone","push","map","tz","datetime","timeZone","nowInTimeZone","setZone","zoneName","offsetNameLong","offsetNameShort","hour","minute","second","isInDST","year","monthShort","monthLong","day","weekdayLong","weekdayShort","timeZoneName","standardizeTimeZoneName","meridiem","toFormat","countryInfo","worldCountries","find","info","countryCode","countryName","timeISOString","toISO","isLocal","hourDeg","minuteDeg","secondDeg","localTimeZoneName","replace"],"sourceRoot":""}