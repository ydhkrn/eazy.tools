{"version":3,"file":"static/js/3995.78ae7adf.chunk.js","mappings":"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","sources":["pages/tools/money/chit/components/ChitInput.tsx","pages/tools/money/chit/components/ChitOutput.tsx","pages/tools/money/chit/components/Deposits.tsx","pages/tools/money/chit/constants.ts","pages/tools/money/chit/helpers.ts","pages/tools/money/chit/hooks.ts","pages/tools/money/chit/index.tsx","pages/tools/money/chit/types.ts","shared/helpers/number.ts","pages/tools/money/chit/styles.scss"],"sourcesContent":["import React from \"react\";\r\nimport { toHTMLElementID } from \"shared/helpers/string\";\r\nimport { textsChit } from \"../constants\";\r\nimport \"../styles.scss\";\r\nimport { E_ChitActionType, T_ChitInput, T_ChitInputActionType } from \"../types\";\r\n\r\nexport default function ChitInput({\r\n  onInputChange,\r\n  values\r\n}: {\r\n  onInputChange: (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    actionType: T_ChitInputActionType\r\n  ) => void;\r\n  values: T_ChitInput;\r\n}) {\r\n  return (\r\n    <form className=\"chit-input-form\">\r\n      {[\r\n        {\r\n          text: textsChit.monthlyPaymentAmount,\r\n          id: toHTMLElementID(textsChit.monthlyPaymentAmount),\r\n          actionType: E_ChitActionType.inputMonthlyPaymentAmount,\r\n          value: values.monthlyPaymentAmount\r\n        },\r\n        {\r\n          text: textsChit.duration,\r\n          id: toHTMLElementID(textsChit.duration),\r\n          actionType: E_ChitActionType.inputDuration,\r\n          value: values.duration\r\n        },\r\n        {\r\n          text: textsChit.noOfPaymentsSoFar,\r\n          id: toHTMLElementID(textsChit.noOfPaymentsSoFar),\r\n          actionType: E_ChitActionType.inputNoOfPaymentsSoFar,\r\n          value: values.noOfPaymentsSoFar\r\n        },\r\n        {\r\n          text: textsChit.lastPaymentAmount,\r\n          id: toHTMLElementID(textsChit.lastPaymentAmount),\r\n          actionType: E_ChitActionType.inputLastPaymentAmount,\r\n          value: values.lastPaymentAmount\r\n        },\r\n        {\r\n          text: textsChit.agencyCommissionPercent,\r\n          id: toHTMLElementID(textsChit.agencyCommissionPercent),\r\n          actionType: E_ChitActionType.inputAgencyCommissionPercent,\r\n          value: values.agencyCommissionPercent\r\n        },\r\n        {\r\n          text: textsChit.yourAuctionAmount,\r\n          id: toHTMLElementID(textsChit.yourAuctionAmount),\r\n          actionType: E_ChitActionType.inputYourAuctionAmount,\r\n          value: values.yourAuctionAmount\r\n        }\r\n      ].map(({ value, text, id, actionType }) => (\r\n        <fieldset key={id}>\r\n          <label htmlFor={id}>{text}</label>\r\n          <input\r\n            type=\"text\"\r\n            id={id}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n              onInputChange(event, actionType as T_ChitInputActionType);\r\n            }}\r\n            value={value}\r\n          />\r\n        </fieldset>\r\n      ))}\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { T_StringOrNumber } from \"shared/types/common\";\r\nimport { textsChit } from \"../constants\";\r\nimport \"../styles.scss\";\r\n\r\nexport default function ChitOutput({\r\n  className,\r\n  title,\r\n  results\r\n}: {\r\n  className?: string;\r\n  title: string;\r\n  results: {\r\n    text: string;\r\n    value?: T_StringOrNumber;\r\n    valueClassName?: string;\r\n  }[];\r\n}) {\r\n  return (\r\n    <section className={`chit-output-section ${className ?? \"\"}`}>\r\n      <h2>{title}</h2>\r\n      <output>\r\n        <table>\r\n          <tbody className=\"chit-output-results-table-body\">\r\n            {results.map(({ text, value, valueClassName }) => (\r\n              <tr key={text}>\r\n                <th className=\"chit-output-text\">{text}</th>\r\n                <td className={valueClassName}>{value ?? textsChit.noValue}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </output>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { toHTMLElementID } from \"shared/helpers/string\";\r\nimport { textsChit } from \"../constants\";\r\nimport \"../styles.scss\";\r\nimport {\r\n  E_ChitActionType,\r\n  T_ChitDepositIndex,\r\n  T_ChitInputDepositActionType,\r\n  T_Deposits\r\n} from \"../types\";\r\n\r\nexport default function Deposits({\r\n  deposits,\r\n  onInputChange\r\n}: {\r\n  deposits: T_Deposits;\r\n  onInputChange: (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    actionType: T_ChitInputDepositActionType,\r\n    index: T_ChitDepositIndex\r\n  ) => void;\r\n}) {\r\n  return (\r\n    <section className=\"deposits\">\r\n      <h2>{textsChit.deposits}</h2>\r\n      {deposits.map((_d, depositIndex) => (\r\n        <form key={depositIndex} className=\"deposit-item\">\r\n          {[\r\n            {\r\n              text: textsChit.depositAmount,\r\n              id: toHTMLElementID(textsChit.depositAmount),\r\n              actionType: E_ChitActionType.inputDepositAmount\r\n            },\r\n            {\r\n              text: textsChit.depositInterestPercent,\r\n              id: toHTMLElementID(textsChit.depositInterestPercent),\r\n              actionType: E_ChitActionType.inputDepositInterestPercent\r\n            }\r\n          ].map(({ text, id, actionType }) => (\r\n            <fieldset key={id}>\r\n              <label htmlFor={id}>{text}</label>\r\n              <input\r\n                type=\"text\"\r\n                id={id}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  onInputChange(\r\n                    event,\r\n                    actionType as T_ChitInputDepositActionType,\r\n                    depositIndex\r\n                  );\r\n                }}\r\n              />\r\n            </fieldset>\r\n          ))}\r\n          <button type=\"button\" className=\"deposit-remove-button\">X</button>\r\n        </form>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n","import { T_ChitState } from \"./types\";\r\n\r\nexport const initialState: T_ChitState = {\r\n  chitInput: {\r\n    monthlyPaymentAmount: \"\",\r\n    duration: \"\",\r\n    noOfPaymentsSoFar: \"\",\r\n    lastPaymentAmount: \"\",\r\n    agencyCommissionPercent: \"5\",\r\n    yourAuctionAmount: \"\"\r\n  },\r\n  deposits: [{ depositAmount: \"\", depositInterestPercent: \"\" }]\r\n};\r\n\r\nexport const textsChit = {\r\n  chitStatus: \"Chit Current Status\",\r\n  chitAuctionResult: \"Chit Auction Result\",\r\n  deposits: \"Deposits\",\r\n  monthlyPaymentAmount: \"Monthly Payment Amount\",\r\n  duration: \"Chit duration in months\",\r\n  noOfPaymentsSoFar: \"No. of payments so far\",\r\n  lastPaymentAmount: \"Last payment amount\",\r\n  agencyCommissionPercent: \"Agency commission %\",\r\n  yourAuctionAmount: \"Your desired auction amount\",\r\n  auctionedChitTotalInHand: \"Total chit amount you get after auction\",\r\n  totalSavingsByAuction: \"Total savings (including deposits interests)\",\r\n  diffAmountWithNormalChitTotalInHand: \"How beneficial was the auction?\",\r\n  chitTotal: \"Total chit amount\",\r\n  normalChitTotalInHand: \"Total chit amount in hand (if not auctioned)\",\r\n  noOfMonthsRemaining: \"Months remaining\",\r\n  lastAuctionAmount: \"Previous auction amount\",\r\n  agencyCommissionAmount: \"Agency commission amount\",\r\n  depositAmount: \"Deposit Amount\",\r\n  depositInterestPercent: \"Deposit Interest Rate %\",\r\n  depositInterestTotalAmount:\r\n    \"Total interest amount from deposits (for {months} months)\",\r\n  hideChitOutput: \"Hide\",\r\n  showChitOutput: \"Show Insights\",\r\n  noValue: \"---\",\r\n  chitReducerError: \"No matching chit action\"\r\n};\r\n","import { toNumber } from \"shared/helpers/number\";\r\nimport { T_ChitInput, T_Deposit, T_ChitStatus } from \"./types\";\r\n\r\nexport function calcChitStatus(chitInput: T_ChitInput): T_ChitStatus {\r\n  const duration = toNumber(chitInput.duration);\r\n  const monthlyPaymentAmount = toNumber(chitInput.monthlyPaymentAmount);\r\n  const noOfPaymentsSoFar = toNumber(chitInput.noOfPaymentsSoFar);\r\n  const agencyCommissionPercent = toNumber(chitInput.agencyCommissionPercent);\r\n  const lastPaymentAmount = toNumber(chitInput.lastPaymentAmount);\r\n\r\n  let chitTotal = 0;\r\n  if (duration > 0) {\r\n    chitTotal = monthlyPaymentAmount * duration;\r\n  }\r\n  const noOfMonthsRemaining = duration - noOfPaymentsSoFar;\r\n  const agencyCommissionAmount = (chitTotal * agencyCommissionPercent) / 100;\r\n  const normalChitTotalInHand = chitTotal - agencyCommissionAmount;\r\n\r\n  let lastAuctionAmount = 0;\r\n  if (lastPaymentAmount > 0) {\r\n    lastAuctionAmount =\r\n      agencyCommissionAmount +\r\n      (monthlyPaymentAmount - lastPaymentAmount) * duration;\r\n  }\r\n\r\n  return {\r\n    chitTotal: Math.round(chitTotal),\r\n    normalChitTotalInHand: Math.round(normalChitTotalInHand),\r\n    noOfMonthsRemaining: Math.round(noOfMonthsRemaining),\r\n    lastAuctionAmount: Math.round(lastAuctionAmount),\r\n    agencyCommissionAmount: Math.round(agencyCommissionAmount)\r\n  };\r\n}\r\n\r\nexport function calcDepositInterestTotal(\r\n  deposits: T_Deposit[],\r\n  duration: number\r\n) {\r\n  return deposits.reduce((total, deposit) => {\r\n    const depositAmount = toNumber(deposit.depositAmount);\r\n    const depositInterestPercent = toNumber(deposit.depositInterestPercent);\r\n    const interestAmount =\r\n      ((depositAmount * depositInterestPercent) / 100 / 12) * duration;\r\n\r\n    return total + interestAmount;\r\n  }, 0);\r\n}\r\n\r\nexport function calcChitAuctionResult(\r\n  chitInput: T_ChitInput,\r\n  { chitTotal, normalChitTotalInHand, agencyCommissionAmount }: T_ChitStatus,\r\n  depositInterestTotal: number\r\n) {\r\n  const yourAuctionAmount = toNumber(chitInput.yourAuctionAmount);\r\n  const auctionedChitTotalInHand = chitTotal - yourAuctionAmount;\r\n  const totalSavingsByAuction = auctionedChitTotalInHand + depositInterestTotal;\r\n  const diffAmountWithNormalChitTotalInHand =\r\n    totalSavingsByAuction - normalChitTotalInHand;\r\n\r\n  return {\r\n    auctionedChitTotalInHand: Math.round(auctionedChitTotalInHand),\r\n    totalSavingsByAuction: Math.round(totalSavingsByAuction),\r\n    diffAmountWithNormalChitTotalInHand: Math.round(\r\n      diffAmountWithNormalChitTotalInHand\r\n    )\r\n  };\r\n}\r\n","import { initialState, textsChit } from \"./constants\";\r\nimport {\r\n  E_ChitActionType,\r\n  T_ChitAction,\r\n  T_ChitDepositIndex,\r\n  T_ChitState,\r\n  T_DepositField,\r\n  T_Deposits\r\n} from \"./types\";\r\n\r\nexport function chitReducer(\r\n  state: T_ChitState,\r\n  [type, payload]: T_ChitAction\r\n): T_ChitState {\r\n  switch (type) {\r\n    case E_ChitActionType.clearEverything: {\r\n      return initialState;\r\n    }\r\n    case E_ChitActionType.inputMonthlyPaymentAmount: {\r\n      return {\r\n        ...state,\r\n        chitInput: {\r\n          ...state.chitInput,\r\n          monthlyPaymentAmount: payload\r\n        }\r\n      };\r\n    }\r\n    case E_ChitActionType.inputDuration: {\r\n      return {\r\n        ...state,\r\n        chitInput: {\r\n          ...state.chitInput,\r\n          duration: payload\r\n        }\r\n      };\r\n    }\r\n    case E_ChitActionType.inputNoOfPaymentsSoFar: {\r\n      return {\r\n        ...state,\r\n        chitInput: {\r\n          ...state.chitInput,\r\n          noOfPaymentsSoFar: payload\r\n        }\r\n      };\r\n    }\r\n    case E_ChitActionType.inputLastPaymentAmount: {\r\n      return {\r\n        ...state,\r\n        chitInput: {\r\n          ...state.chitInput,\r\n          lastPaymentAmount: payload\r\n        }\r\n      };\r\n    }\r\n    case E_ChitActionType.inputAgencyCommissionPercent: {\r\n      return {\r\n        ...state,\r\n        chitInput: {\r\n          ...state.chitInput,\r\n          agencyCommissionPercent: payload\r\n        }\r\n      };\r\n    }\r\n    case E_ChitActionType.inputYourAuctionAmount: {\r\n      return {\r\n        ...state,\r\n        chitInput: {\r\n          ...state.chitInput,\r\n          yourAuctionAmount: payload\r\n        }\r\n      };\r\n    }\r\n    case E_ChitActionType.inputDepositAmount: {\r\n      const newDeposits = getUpdatedDeposits(state.deposits, {\r\n        ...payload,\r\n        field: \"depositAmount\"\r\n      });\r\n      return {\r\n        ...state,\r\n        deposits: newDeposits\r\n      };\r\n    }\r\n    case E_ChitActionType.inputDepositInterestPercent: {\r\n      const newDeposits = getUpdatedDeposits(state.deposits, {\r\n        ...payload,\r\n        field: \"depositInterestPercent\"\r\n      });\r\n      return {\r\n        ...state,\r\n        deposits: newDeposits\r\n      };\r\n    }\r\n    case E_ChitActionType.addDeposit: {\r\n      const newDeposits = state.deposits.concat(initialState.deposits[0]);\r\n      return {\r\n        ...state,\r\n        deposits: newDeposits\r\n      };\r\n    }\r\n    case E_ChitActionType.removeDeposit: {\r\n      const newDeposits = state.deposits.filter(\r\n        (_d, index) => index !== payload\r\n      );\r\n      return {\r\n        ...state,\r\n        deposits: newDeposits\r\n      };\r\n    }\r\n    default: {\r\n      throw new Error(textsChit.chitReducerError);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getUpdatedDeposits(\r\n  deposits: T_Deposits,\r\n  updatedDeposit: {\r\n    index: T_ChitDepositIndex;\r\n    field: T_DepositField;\r\n    value: string;\r\n  }\r\n) {\r\n  return deposits.map((deposit, index) => {\r\n    if (updatedDeposit.index === index) {\r\n      return {\r\n        ...deposit,\r\n        [updatedDeposit.field]: updatedDeposit.value\r\n      };\r\n    }\r\n    return deposit;\r\n  });\r\n}\r\n","import React, { useReducer } from \"react\";\r\nimport ChitInput from \"./components/ChitInput\";\r\nimport Deposits from \"./components/Deposits\";\r\nimport \"./styles.scss\";\r\nimport { textsChit } from \"./constants\";\r\nimport ChitOutput from \"./components/ChitOutput\";\r\nimport { chitReducer } from \"./hooks\";\r\nimport { initialState } from \"./constants\";\r\nimport {\r\n  calcChitAuctionResult,\r\n  calcChitStatus,\r\n  calcDepositInterestTotal\r\n} from \"./helpers\";\r\nimport { toNumber } from \"shared/helpers/number\";\r\nimport { useMemoizedCSSClass } from \"shared/hooks/styles\";\r\n\r\nexport default function Chit() {\r\n  const [{ chitInput, deposits }, dispatch] = useReducer(\r\n    chitReducer,\r\n    initialState\r\n  );\r\n  const chitStatus = calcChitStatus(chitInput);\r\n  // Deposits are effective only from next month\r\n  const depositsDuration = toNumber(chitStatus.noOfMonthsRemaining) - 1;\r\n  const depositInterestTotal = calcDepositInterestTotal(\r\n    deposits,\r\n    depositsDuration\r\n  );\r\n  const chitAuctionResult = calcChitAuctionResult(\r\n    chitInput,\r\n    chitStatus,\r\n    depositInterestTotal\r\n  );\r\n  const diffAmountWithNormalChitTotalInHand = toNumber(\r\n    chitAuctionResult.diffAmountWithNormalChitTotalInHand\r\n  );\r\n  const diffAmountClassName = useMemoizedCSSClass(\r\n    [\r\n      {\r\n        \"text-red-500\": diffAmountWithNormalChitTotalInHand < 0,\r\n        \"text-green-500\": diffAmountWithNormalChitTotalInHand > 0\r\n      }\r\n    ],\r\n    [diffAmountWithNormalChitTotalInHand]\r\n  );\r\n\r\n  return (\r\n    <div className=\"chit\">\r\n      <div className=\"chit-input-container\">\r\n        <ChitInput\r\n          values={chitInput}\r\n          onInputChange={(event, actionType) => {\r\n            const value = event.target.value ?? \"\";\r\n            dispatch([actionType, value]);\r\n          }}\r\n        />\r\n        <div>\r\n          <Deposits\r\n            deposits={deposits}\r\n            onInputChange={(event, actionType, index) => {\r\n              const value = event.target.value ?? \"\";\r\n              dispatch([actionType, { index, value }]);\r\n            }}\r\n          />\r\n          {depositsDuration > 0 && (\r\n            <>\r\n              {textsChit.depositInterestTotalAmount.replace(\r\n                \"{months}\",\r\n                depositsDuration.toString()\r\n              )}\r\n              &nbsp;=&nbsp;{depositInterestTotal}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"chit-output-container\">\r\n        <ChitOutput\r\n          results={[\r\n            {\r\n              text: textsChit.chitTotal,\r\n              value: chitStatus.chitTotal\r\n            },\r\n            {\r\n              text: textsChit.normalChitTotalInHand,\r\n              value: chitStatus.normalChitTotalInHand\r\n            },\r\n            {\r\n              text: textsChit.noOfMonthsRemaining,\r\n              value: chitStatus.noOfMonthsRemaining\r\n            },\r\n            {\r\n              text: textsChit.lastAuctionAmount,\r\n              value: chitStatus.lastAuctionAmount\r\n            },\r\n            {\r\n              text: textsChit.agencyCommissionAmount,\r\n              value: chitStatus.agencyCommissionAmount\r\n            }\r\n          ]}\r\n          title={textsChit.chitStatus}\r\n        />\r\n        <ChitOutput\r\n          results={[\r\n            {\r\n              text: textsChit.auctionedChitTotalInHand,\r\n              value: chitAuctionResult.auctionedChitTotalInHand\r\n            },\r\n            {\r\n              text: textsChit.totalSavingsByAuction,\r\n              value: chitAuctionResult.totalSavingsByAuction\r\n            },\r\n            {\r\n              text: textsChit.diffAmountWithNormalChitTotalInHand,\r\n              value: chitAuctionResult.diffAmountWithNormalChitTotalInHand,\r\n              valueClassName: diffAmountClassName\r\n            }\r\n          ]}\r\n          title={textsChit.chitAuctionResult}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export type T_ChitInput = Record<\r\n  | \"monthlyPaymentAmount\"\r\n  | \"duration\"\r\n  | \"noOfPaymentsSoFar\"\r\n  | \"lastPaymentAmount\"\r\n  | \"agencyCommissionPercent\"\r\n  | \"yourAuctionAmount\",\r\n  string\r\n>;\r\n\r\nexport type T_DepositField = \"depositAmount\" | \"depositInterestPercent\";\r\n\r\nexport type T_Deposit = Record<T_DepositField, string>;\r\n\r\nexport type T_Deposits = T_Deposit[];\r\n\r\nexport type T_ChitState = {\r\n  chitInput: T_ChitInput;\r\n  deposits: T_Deposits;\r\n};\r\n\r\nexport enum E_ChitActionType {\r\n  clearEverything,\r\n  inputMonthlyPaymentAmount,\r\n  inputDuration,\r\n  inputNoOfPaymentsSoFar,\r\n  inputLastPaymentAmount,\r\n  inputAgencyCommissionPercent,\r\n  inputYourAuctionAmount,\r\n  inputDepositAmount,\r\n  inputDepositInterestPercent,\r\n  addDeposit,\r\n  removeDeposit\r\n}\r\n\r\nexport type T_ChitInputActionType =\r\n  | E_ChitActionType.inputMonthlyPaymentAmount\r\n  | E_ChitActionType.inputDuration\r\n  | E_ChitActionType.inputNoOfPaymentsSoFar\r\n  | E_ChitActionType.inputLastPaymentAmount\r\n  | E_ChitActionType.inputAgencyCommissionPercent\r\n  | E_ChitActionType.inputYourAuctionAmount;\r\n\r\nexport type T_ChitInputDepositActionType =\r\n  | E_ChitActionType.inputDepositAmount\r\n  | E_ChitActionType.inputDepositInterestPercent;\r\n\r\nexport type T_ChitDepositIndex = number;\r\n\r\nexport type T_ChitAction =\r\n  | [E_ChitActionType.clearEverything]\r\n  | [T_ChitInputActionType, string]\r\n  | [\r\n      T_ChitInputDepositActionType,\r\n      {\r\n        index: T_ChitDepositIndex;\r\n        value: string;\r\n      }\r\n    ]\r\n  | [E_ChitActionType.addDeposit, T_Deposits]\r\n  | [E_ChitActionType.removeDeposit, T_ChitDepositIndex];\r\n\r\nexport type T_ChitStatus = {\r\n  chitTotal: number;\r\n  normalChitTotalInHand: number;\r\n  noOfMonthsRemaining: number;\r\n  lastAuctionAmount: number;\r\n  agencyCommissionAmount: number;\r\n};\r\n","export function toNumber(x: any) {\r\n  return +x;\r\n}\r\n\r\nexport function round(num: number | string, fractionDigits: number = 2) {\r\n  return toNumber(toNumber(num).toFixed(fractionDigits));\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["ChitInput","_ref","onInputChange","values","_jsx","className","children","text","textsChit","monthlyPaymentAmount","id","toHTMLElementID","actionType","E_ChitActionType","inputMonthlyPaymentAmount","value","duration","inputDuration","noOfPaymentsSoFar","inputNoOfPaymentsSoFar","lastPaymentAmount","inputLastPaymentAmount","agencyCommissionPercent","inputAgencyCommissionPercent","yourAuctionAmount","inputYourAuctionAmount","map","_ref2","_jsxs","htmlFor","type","onChange","event","ChitOutput","title","results","valueClassName","noValue","Deposits","deposits","_d","depositIndex","depositAmount","inputDepositAmount","depositInterestPercent","inputDepositInterestPercent","initialState","chitInput","chitStatus","chitAuctionResult","auctionedChitTotalInHand","totalSavingsByAuction","diffAmountWithNormalChitTotalInHand","chitTotal","normalChitTotalInHand","noOfMonthsRemaining","lastAuctionAmount","agencyCommissionAmount","depositInterestTotalAmount","hideChitOutput","showChitOutput","chitReducerError","calcChitStatus","toNumber","Math","round","calcDepositInterestTotal","reduce","total","deposit","calcChitAuctionResult","depositInterestTotal","chitReducer","state","payload","clearEverything","newDeposits","getUpdatedDeposits","field","addDeposit","concat","removeDeposit","filter","index","Error","updatedDeposit","Chit","dispatch","useReducer","depositsDuration","diffAmountClassName","useMemoizedCSSClass","_event$target$value","target","_event$target$value2","_Fragment","replace","toString","x","num","fractionDigits","arguments","length","undefined","toFixed"],"sourceRoot":""}