{"version":3,"file":"static/js/6377.e6afe1a4.chunk.js","mappings":"mTAGO,SAASA,EAAeC,GAC7B,IAAMC,GAAWC,EAAAA,EAAAA,UAASF,EAAUC,UAEhCE,EAAuB,EACvBF,EAAW,IACbE,GAAuBD,EAAAA,EAAAA,UAASF,EAAUI,aAAeH,GAG3D,IAAMI,EAAsBJ,GAAWC,EAAAA,EAAAA,UAASF,EAAUM,mBACpDC,GACHL,EAAAA,EAAAA,UAASF,EAAUI,cAClBF,EAAAA,EAAAA,UAASF,EAAUQ,yBACrB,IACIC,GACJP,EAAAA,EAAAA,UAASF,EAAUI,aAAeG,EAEhCG,EAAuB,EAQ3B,OAPIR,EAAAA,EAAAA,UAASF,EAAUW,mBAAqB,IAC1CD,EACEH,IACCL,EAAAA,EAAAA,UAASC,IAAwBD,EAAAA,EAAAA,UAASF,EAAUW,oBACnDV,GAGC,CACLE,qBAAAA,EACAE,oBAAAA,EACAE,uBAAAA,EACAE,sBAAAA,EACAC,qBAAAA,EAEH,CAEM,SAASE,EACdC,EACAZ,GAEA,OAAOY,EAASC,QAAO,SAACC,EAAOC,GAM7B,OAAOD,GAJHb,EAAAA,EAAAA,UAASc,EAAQC,UAAWf,EAAAA,EAAAA,UAASc,EAAQE,cAAgB,KAC7D,GACFjB,CAGH,GAAE,EACJ,CAEM,SAASkB,EACdnB,EACAoB,EACAC,GAEA,IAAMC,GACJpB,EAAAA,EAAAA,UAASmB,EAAWZ,yBACnBP,EAAAA,EAAAA,UAASF,EAAUuB,mBAClBrB,EAAAA,EAAAA,UAASmB,EAAWd,yBAClBiB,EACJF,EAA2BF,EAK7B,MAAO,CACLE,yBAAAA,EACAE,oCAAAA,EACAC,oCANAD,GACAtB,EAAAA,EAAAA,UAASmB,EAAWZ,uBAOvB,CAEM,SAASiB,EACdC,EACAC,GAEA,IAAIR,EAAuBO,EAAUP,qBACjCC,EAAaM,EAAUN,WACvBQ,EAAgBF,EAAUE,cAC1BhB,EAAWc,EAAUd,SACrBb,EAAY2B,EAAU3B,UAyB1B,OAvBI4B,EAAkBf,UAEpBO,EAAuBR,EADvBC,EAAWe,EAAkBf,UAG3BX,EAAAA,EAAAA,UAASyB,EAAUN,WAAWhB,qBAAuB,GAEvDwB,EAAgBV,EACdQ,EAAU3B,UACVoB,EACAO,EAAUN,aAEHO,EAAkB5B,YAE3BqB,EAAatB,EADbC,EAAY4B,EAAkB5B,YAE1BE,EAAAA,EAAAA,UAASF,EAAUuB,kBAAoB,IACzCM,EAAgBV,EACdnB,GACAE,EAAAA,EAAAA,UAASyB,EAAUP,sBACnBC,KAKC,CACLD,qBAAAA,EACAC,WAAAA,EACAQ,cAAAA,EACAhB,SAAAA,EACAb,UAAAA,EAEH,C,wBChHM,SAASE,EAAS4B,GACvB,OAAQA,CACT,CAEM,SAASC,EAAMC,GAAmD,IAA7BC,EAA4B,uDAAH,EACnE,OAAO/B,EAASA,EAAS8B,GAAKE,QAAQD,GACvC,C","sources":["pages/tools/money/chit/helpers.ts","shared/helpers/number.ts"],"sourcesContent":["import { toNumber } from \"shared/helpers/number\";\nimport { T_ChitInput, T_ChitStatus, T_Deposit, T_ChitState } from \"./types\";\n\nexport function calcChitStatus(chitInput: T_ChitInput): T_ChitStatus {\n  const duration = toNumber(chitInput.duration);\n\n  let monthlyPaymentAmount = 0;\n  if (duration > 0) {\n    monthlyPaymentAmount = toNumber(chitInput.totalAmount) / duration;\n  }\n\n  const noOfMonthsRemaining = duration - toNumber(chitInput.noOfPaymentsSoFar);\n  const agencyCommissionAmount =\n    (toNumber(chitInput.totalAmount) *\n      toNumber(chitInput.agencyCommissionPercent)) /\n    100;\n  const normalChitTotalInHand =\n    toNumber(chitInput.totalAmount) - agencyCommissionAmount;\n\n  let lastAuctionBidAmount = 0;\n  if (toNumber(chitInput.lastPaymentAmount) > 0) {\n    lastAuctionBidAmount =\n      agencyCommissionAmount +\n      (toNumber(monthlyPaymentAmount) - toNumber(chitInput.lastPaymentAmount)) *\n        duration;\n  }\n\n  return {\n    monthlyPaymentAmount,\n    noOfMonthsRemaining,\n    agencyCommissionAmount,\n    normalChitTotalInHand,\n    lastAuctionBidAmount\n  };\n}\n\nexport function calcDepositInterestTotal(\n  deposits: T_Deposit[],\n  duration: number\n) {\n  return deposits.reduce((total, deposit) => {\n    const interestAmount =\n      ((toNumber(deposit.amount) * (toNumber(deposit.interestRate) / 100)) /\n        12) *\n      duration; // no.of months in a year;\n\n    return total + interestAmount;\n  }, 0);\n}\n\nexport function calcChitAuctionResult(\n  chitInput: T_ChitInput,\n  depositInterestTotal: number,\n  chitStatus: T_ChitStatus\n) {\n  const auctionedChitTotalInHand =\n    toNumber(chitStatus.normalChitTotalInHand) -\n    (toNumber(chitInput.auctionBidAmount) -\n      toNumber(chitStatus.agencyCommissionAmount));\n  const auctionedChitTotalInHandAndDeposits =\n    auctionedChitTotalInHand + depositInterestTotal;\n  const diffAmountWithNormalChitTotalInHand =\n    auctionedChitTotalInHandAndDeposits -\n    toNumber(chitStatus.normalChitTotalInHand);\n\n  return {\n    auctionedChitTotalInHand,\n    auctionedChitTotalInHandAndDeposits,\n    diffAmountWithNormalChitTotalInHand\n  };\n}\n\nexport function calcChitState(\n  prevState: T_ChitState,\n  changedStateProps: Partial<T_ChitState>\n): T_ChitState {\n  let depositInterestTotal = prevState.depositInterestTotal;\n  let chitStatus = prevState.chitStatus;\n  let auctionResult = prevState.auctionResult;\n  let deposits = prevState.deposits;\n  let chitInput = prevState.chitInput;\n\n  if (changedStateProps.deposits) {\n    deposits = changedStateProps.deposits;\n    depositInterestTotal = calcDepositInterestTotal(\n      deposits,\n      toNumber(prevState.chitStatus.noOfMonthsRemaining) - 1\n    );\n    auctionResult = calcChitAuctionResult(\n      prevState.chitInput,\n      depositInterestTotal,\n      prevState.chitStatus\n    );\n  } else if (changedStateProps.chitInput) {\n    chitInput = changedStateProps.chitInput;\n    chitStatus = calcChitStatus(chitInput);\n    if (toNumber(chitInput.auctionBidAmount) > 0) {\n      auctionResult = calcChitAuctionResult(\n        chitInput,\n        toNumber(prevState.depositInterestTotal),\n        chitStatus\n      );\n    }\n  }\n\n  return {\n    depositInterestTotal,\n    chitStatus,\n    auctionResult,\n    deposits,\n    chitInput\n  };\n}\n","export function toNumber(x: any) {\n  return +x;\n}\n\nexport function round(num: number | string, fractionDigits: number = 2) {\n  return toNumber(toNumber(num).toFixed(fractionDigits));\n}\n"],"names":["calcChitStatus","chitInput","duration","toNumber","monthlyPaymentAmount","totalAmount","noOfMonthsRemaining","noOfPaymentsSoFar","agencyCommissionAmount","agencyCommissionPercent","normalChitTotalInHand","lastAuctionBidAmount","lastPaymentAmount","calcDepositInterestTotal","deposits","reduce","total","deposit","amount","interestRate","calcChitAuctionResult","depositInterestTotal","chitStatus","auctionedChitTotalInHand","auctionBidAmount","auctionedChitTotalInHandAndDeposits","diffAmountWithNormalChitTotalInHand","calcChitState","prevState","changedStateProps","auctionResult","x","round","num","fractionDigits","toFixed"],"sourceRoot":""}