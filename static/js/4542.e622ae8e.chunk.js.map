{"version":3,"file":"static/js/4542.e622ae8e.chunk.js","mappings":"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","sources":["pages/tools/money/chit/constants.ts","pages/tools/money/chit/helpers.ts","pages/tools/money/chit/hooks.ts","pages/tools/money/chit/types.ts","shared/helpers/number.ts"],"sourcesContent":["import { T_ChitState } from \"./types\";\n\nexport const initialState: T_ChitState = {\n  chitInput: {\n    totalAmount: null,\n    duration: null,\n    lastPaymentAmount: null,\n    noOfPaymentsSoFar: null,\n    agencyCommissionPercent: null,\n    auctionBidAmount: null,\n  },\n  chitStatus: {\n    monthlyPaymentAmount: null,\n    noOfMonthsRemaining: null,\n    agencyCommissionAmount: null,\n    normalChitTotalInHand: null,\n    lastAuctionBidAmount: null,\n  },\n  deposits: [],\n  depositInterestTotal: null,\n  auctionResult: {\n    auctionedChitTotalInHand: null,\n    auctionedChitTotalInHandAndDeposits: null,\n    diffAmountWithNormalChitTotalInHand: null,\n  }\n};\n","import { toNumber } from \"shared/helpers/number\";\nimport { T_ChitInput, T_ChitStatus, T_Deposit, T_ChitState } from \"./types\";\n\nexport function calcChitStatus(chitInput: T_ChitInput): T_ChitStatus {\n  const duration = toNumber(chitInput.duration);\n\n  let monthlyPaymentAmount = 0;\n  if (duration > 0) {\n    monthlyPaymentAmount = toNumber(chitInput.totalAmount) / duration;\n  }\n\n  const noOfMonthsRemaining = duration - toNumber(chitInput.noOfPaymentsSoFar);\n  const agencyCommissionAmount =\n    (toNumber(chitInput.totalAmount) *\n      toNumber(chitInput.agencyCommissionPercent)) /\n    100;\n  const normalChitTotalInHand =\n    toNumber(chitInput.totalAmount) - agencyCommissionAmount;\n\n  let lastAuctionBidAmount = 0;\n  if (toNumber(chitInput.lastPaymentAmount) > 0) {\n    lastAuctionBidAmount =\n      agencyCommissionAmount +\n      (toNumber(monthlyPaymentAmount) - toNumber(chitInput.lastPaymentAmount)) *\n        duration;\n  }\n\n  return {\n    monthlyPaymentAmount,\n    noOfMonthsRemaining,\n    agencyCommissionAmount,\n    normalChitTotalInHand,\n    lastAuctionBidAmount\n  };\n}\n\nexport function calcDepositInterestTotal(\n  deposits: T_Deposit[],\n  duration: number\n) {\n  return deposits.reduce((total, deposit) => {\n    const interestAmount =\n      ((toNumber(deposit.amount) * (toNumber(deposit.interestRate) / 100)) /\n        12) *\n      duration; // no.of months in a year;\n\n    return total + interestAmount;\n  }, 0);\n}\n\nexport function calcChitAuctionResult(\n  chitInput: T_ChitInput,\n  depositInterestTotal: number,\n  chitStatus: T_ChitStatus\n) {\n  const auctionedChitTotalInHand =\n    toNumber(chitStatus.normalChitTotalInHand) -\n    (toNumber(chitInput.auctionBidAmount) -\n      toNumber(chitStatus.agencyCommissionAmount));\n  const auctionedChitTotalInHandAndDeposits =\n    auctionedChitTotalInHand + depositInterestTotal;\n  const diffAmountWithNormalChitTotalInHand =\n    auctionedChitTotalInHandAndDeposits -\n    toNumber(chitStatus.normalChitTotalInHand);\n\n  return {\n    auctionedChitTotalInHand,\n    auctionedChitTotalInHandAndDeposits,\n    diffAmountWithNormalChitTotalInHand\n  };\n}\n\nexport function calcChitState(\n  prevState: T_ChitState,\n  changedStateProps: Partial<T_ChitState>\n): T_ChitState {\n  let depositInterestTotal = prevState.depositInterestTotal;\n  let chitStatus = prevState.chitStatus;\n  let auctionResult = prevState.auctionResult;\n  let deposits = prevState.deposits;\n  let chitInput = prevState.chitInput;\n\n  if (changedStateProps.deposits) {\n    deposits = changedStateProps.deposits;\n    depositInterestTotal = calcDepositInterestTotal(\n      deposits,\n      toNumber(prevState.chitStatus.noOfMonthsRemaining) - 1\n    );\n    auctionResult = calcChitAuctionResult(\n      prevState.chitInput,\n      depositInterestTotal,\n      prevState.chitStatus\n    );\n  } else if (changedStateProps.chitInput) {\n    chitInput = changedStateProps.chitInput;\n    chitStatus = calcChitStatus(chitInput);\n    if (toNumber(chitInput.auctionBidAmount) > 0) {\n      auctionResult = calcChitAuctionResult(\n        chitInput,\n        toNumber(prevState.depositInterestTotal),\n        chitStatus\n      );\n    }\n  }\n\n  return {\n    depositInterestTotal,\n    chitStatus,\n    auctionResult,\n    deposits,\n    chitInput\n  };\n}\n","import React from \"react\";\nimport { isChangeEvent } from \"shared/helpers/dom\";\nimport { toNumber } from \"shared/helpers/number\";\nimport { initialState } from \"./constants\";\nimport { calcChitState } from \"./helpers\";\nimport { E_ChitActions, T_ChitAction, T_ChitState } from \"./types\";\n\nexport function chitReducer(\n  state: T_ChitState,\n  [type, payload]: T_ChitAction\n): T_ChitState {\n  switch (toNumber(type)) {\n    case E_ChitActions.clearEverything: {\n      return initialState;\n    }\n    /**\n     * Deposit actions\n     */\n    case E_ChitActions.depositAdd: {\n      const newDeposits = [...state.deposits, { amount: 0, interestRate: 0 }];\n      return calcChitState(\n        state, \n        { deposits: newDeposits }\n      );\n    }\n    case E_ChitActions.depositRemove: {\n      const newDeposits = state.deposits.filter(\n        (_d, index) => index !== payload?.index\n      );\n      return calcChitState(\n        state, \n        { deposits: newDeposits }\n      );\n    }\n    case E_ChitActions.depositAmountInput: {\n      const newDeposits = state.deposits.map(\n        (d, index) => {\n          if (payload?.index === index) {\n            return { ...d, amount: toNumber(payload.value) }\n          }\n          return d;\n        }\n      );\n      return calcChitState(\n        state, \n        { deposits: newDeposits }\n      );\n    }\n    case E_ChitActions.depositInterestRateInput: {\n      const newDeposits = state.deposits.map(\n        (d, index) => {\n          if (payload?.index === index) {\n            return { ...d, interestRate: toNumber(payload.value) }\n          }\n          return d;\n        }\n      );\n      return calcChitState(\n        state, \n        { deposits: newDeposits }\n      );\n    }\n    case E_ChitActions.chitTotalAmountInput: {\n      const newChitInput = {\n        ...state.chitInput,\n        totalAmount: toNumber(payload?.value)\n      };\n      return calcChitState(\n        state, \n        { chitInput: newChitInput }\n      );\n    }\n    case E_ChitActions.chitDurationInput: {\n      const newChitInput = {\n        ...state.chitInput,\n        duration: toNumber(payload?.value)\n      };\n      return calcChitState(\n        state, \n        { chitInput: newChitInput }\n      );\n    }\n    case E_ChitActions.chitLastPaymentAmountInput: {\n      const newChitInput = {\n        ...state.chitInput,\n        lastPaymentAmount: toNumber(payload?.value)\n      };\n      return calcChitState(\n        state, \n        { chitInput: newChitInput }\n      );\n    }\n    case E_ChitActions.chitNoOfPaymentsSoFarInput: {\n      const newChitInput = {\n        ...state.chitInput,\n        noOfPaymentsSoFar: toNumber(payload?.value)\n      };\n      return calcChitState(\n        state, \n        { chitInput: newChitInput }\n      );\n    }\n    case E_ChitActions.chitAgencyCommissionPercentInput: {\n      const newChitInput = {\n        ...state.chitInput,\n        agencyCommissionPercent: toNumber(payload?.value)\n      };\n      return calcChitState(\n        state, \n        { chitInput: newChitInput }\n      );\n    }\n    case E_ChitActions.chitAuctionBidAmountInput: {\n      const newChitInput = {\n        ...state.chitInput,\n        auctionBidAmount: toNumber(payload?.value)\n      };\n      return calcChitState(\n        state, \n        { chitInput: newChitInput }\n      );\n    }\n    default:\n      return state;\n  }\n}\n\nexport function useEventHandler(\n  dispatch: React.Dispatch<T_ChitAction>\n) {\n  const eventHandler = (\n    event: React.ChangeEvent<HTMLInputElement> | React.MouseEvent<HTMLButtonElement>\n  ) => {\n    const value = isChangeEvent<HTMLInputElement>(event) ? event.target.value : \"\";\n    const { action, index } = event.currentTarget.dataset;\n    if (action) {\n      const actionAndPayload: T_ChitAction = [\n        action as unknown as E_ChitActions,\n        { value, index: toNumber(index) }\n      ];\n      dispatch(actionAndPayload);\n    }\n  };\n\n  return eventHandler;\n}\n","import { T_StringOrNumber } from \"shared/types/common\";\nimport { T_Nullable } from \"shared/types/generics\";\n\nexport enum E_ChitActions {\n  clearEverything,\n  chitTotalAmountInput,\n  chitDurationInput,\n  chitLastPaymentAmountInput,\n  chitNoOfPaymentsSoFarInput,\n  chitAgencyCommissionPercentInput,\n  chitAuctionBidAmountInput,\n  auctionInput,\n  depositAdd,\n  depositRemove,\n  depositAmountInput,\n  depositInterestRateInput\n}\n\nexport type T_ChitAction = [\n  type: E_ChitActions,\n  payload?: { value?: T_StringOrNumber; index?: number; }\n];\n\nexport type T_ChitInput = {\n  totalAmount: T_Nullable<number>;\n  duration: T_Nullable<number>;\n  lastPaymentAmount: T_Nullable<number>;\n  noOfPaymentsSoFar: T_Nullable<number>;\n  agencyCommissionPercent: T_Nullable<number>;\n  auctionBidAmount: T_Nullable<number>;\n};\n\nexport type T_ChitStatus = {\n  monthlyPaymentAmount: T_Nullable<number>;\n  noOfMonthsRemaining: T_Nullable<number>;\n  agencyCommissionAmount: T_Nullable<number>;\n  normalChitTotalInHand: T_Nullable<number>;\n  lastAuctionBidAmount: T_Nullable<number>;\n}\n\nexport type T_Deposit = {\n  amount: T_Nullable<number>;\n  interestRate: T_Nullable<number>;\n};\n\nexport type T_ChitAuctionResult = {\n  auctionedChitTotalInHand: T_Nullable<number>;\n  auctionedChitTotalInHandAndDeposits: T_Nullable<number>;\n  diffAmountWithNormalChitTotalInHand: T_Nullable<number>;\n};\n\nexport type T_ChitState = {\n  chitInput: T_ChitInput;\n  chitStatus: T_ChitStatus;\n  deposits: T_Deposit[];\n  depositInterestTotal: T_Nullable<number>;\n  auctionResult: T_ChitAuctionResult;\n};\n","export function toNumber(x: any) {\n  return +x;\n}\n\nexport function round(num: number | string, fractionDigits: number = 2) {\n  return toNumber(toNumber(num).toFixed(fractionDigits));\n}\n"],"names":["initialState","chitInput","totalAmount","duration","lastPaymentAmount","noOfPaymentsSoFar","agencyCommissionPercent","auctionBidAmount","chitStatus","monthlyPaymentAmount","noOfMonthsRemaining","agencyCommissionAmount","normalChitTotalInHand","lastAuctionBidAmount","deposits","depositInterestTotal","auctionResult","auctionedChitTotalInHand","auctionedChitTotalInHandAndDeposits","diffAmountWithNormalChitTotalInHand","calcChitStatus","toNumber","calcDepositInterestTotal","reduce","total","deposit","amount","interestRate","calcChitAuctionResult","calcChitState","prevState","changedStateProps","chitReducer","state","type","payload","E_ChitActions","newDeposits","filter","_d","index","map","d","value","newChitInput","useEventHandler","dispatch","event","isChangeEvent","target","currentTarget","dataset","action","actionAndPayload","x","round","num","fractionDigits","toFixed"],"sourceRoot":""}