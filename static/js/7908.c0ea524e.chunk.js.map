{"version":3,"file":"static/js/7908.c0ea524e.chunk.js","mappings":"mKAIA,MAAMA,EAAwC,CAC5CC,EAAG,CACDC,KAAM,SACNC,OAAQ,KAEVC,EAAG,CACDF,KAAM,UACNC,OAAQ,SAEVE,EAAG,CACDH,KAAM,aACNC,OAAQ,SAEVG,EAAG,CACDJ,KAAM,UACNC,OAAQ,UAiCNI,EAA2C,CAC/CC,aAFe,IAGfC,WAAY,CACVR,EAAIA,IAAcS,EAAAA,EAAAA,UAAST,GAC3BG,EAAIH,IAAcU,EAAAA,EAAAA,QAAMD,EAAAA,EAAAA,UAAST,GAAK,QACtCI,EAAIJ,IAAcU,EAAAA,EAAAA,OAAgC,IAAxBD,EAAAA,EAAAA,UAAST,GAAK,QAAe,GAAK,GAC5DK,EAAIL,IAAcU,EAAAA,EAAAA,OAAqB,GAAdD,EAAAA,EAAAA,UAAST,GAAU,IAE9CW,WAAY,CACVX,EAAIA,IAAcS,EAAAA,EAAAA,UAAST,GAC3BG,EAAIA,IAAeO,EAAAA,EAAAA,QAAMD,EAAAA,EAAAA,UAASN,GAAK,QACvCC,EAAIA,IAAkBM,EAAAA,EAAAA,OAA4B,IAApBD,EAAAA,EAAAA,UAASL,GAAK,IAAW,GAAK,OAC5DC,EAAIA,IAAcK,EAAAA,EAAAA,OAAqB,GAAdD,EAAAA,EAAAA,UAASJ,GAAU,KAiBhD,EAP6B,CAC3BN,WACAa,SAzBe,IA0BfC,SATe,CACfC,UAAW,IACXC,WAAY,IACZC,cAAeC,OAAOC,KAAKnB,IAO3BO,qB,8FC/DF,QAVA,WACE,OACEa,EAAAA,EAAAA,KAACC,EAAAA,QAAa,CACZC,YAAaC,EAAAA,QAAqBvB,SAClCc,SAAUS,EAAAA,QAAqBT,SAC/BP,mBAAoBgB,EAAAA,QAAqBhB,oBAG/C,C","sources":["pages/tools/convert/temp/constants.ts","pages/tools/convert/temp/index.tsx"],"sourcesContent":["import { T_ConversionFormulas, T_UnitConversionAllUnitsMap } from \"shared/types/unitConverter\";\r\nimport { T_FavoriteCodes } from \"shared/components/unitConverter/types\";\r\nimport { toNumber, round } from \"shared/helpers/number\";\r\n\r\nconst unitsMap: T_UnitConversionAllUnitsMap = {\r\n  K: {\r\n    name: \"Kelvin\",\r\n    symbol: \"K\"\r\n  },\r\n  C: {\r\n    name: \"Celsius\",\r\n    symbol: \"°C\"\r\n  },\r\n  F: {\r\n    name: \"Fahrenheit\",\r\n    symbol: \"°F\"\r\n  },\r\n  R: {\r\n    name: \"Rankine\",\r\n    symbol: \"°R\"\r\n  }\r\n  // RO: {\r\n  //   name: \"Rømer\",\r\n  //   symbol: \"°Rø\"\r\n  // },\r\n  // RE: {\r\n  //   name: \"Réaumur\",\r\n  //   symbol: \"°Ré\"\r\n  // },\r\n  // N: {\r\n  //   name: \"Newton\",\r\n  //   symbol: \"°N\"\r\n  // },\r\n  // D: {\r\n  //   name: \"Delisle\",\r\n  //   symbol: \"°D\"\r\n  // },\r\n  // L: {\r\n  //   name: \"Leiden\",\r\n  //   symbol: \"°L\"\r\n  // },\r\n  // W: {\r\n  //   name: \"Wedgwood\",\r\n  //   symbol: \"°W\"\r\n  // }\r\n};\r\n\r\ntype Kelvin = number;\r\ntype Fahrenheit = number;\r\ntype Celcius = number;\r\n\r\nconst baseUnit = \"K\";\r\nconst conversionFormulas: T_ConversionFormulas = {\r\n  baseUnitCode: baseUnit,\r\n  fromBaseTo: {\r\n    K: (K: Kelvin) => toNumber(K),\r\n    C: (K: Kelvin) => round(toNumber(K) - 273.15),\r\n    F: (K: Kelvin) => round(((toNumber(K) - 273.15) * 9) / 5) + 32,\r\n    R: (K: Kelvin) => round((toNumber(K) * 9) / 5)\r\n  },\r\n  toBaseFrom: {\r\n    K: (K: Kelvin) => toNumber(K),\r\n    C: (C: Celcius) => round(toNumber(C) + 273.15),\r\n    F: (F: Fahrenheit) => round(((toNumber(F) - 32) * 5) / 9) + 273.15,\r\n    R: (R: Kelvin) => round((toNumber(R) * 5) / 9)\r\n  }\r\n};\r\n\r\nconst defaults = {\r\n  inputCode: \"C\",\r\n  targetCode: \"F\",\r\n  favoriteCodes: Object.keys(unitsMap) as T_FavoriteCodes\r\n};\r\n\r\nconst temperatureConstants = {\r\n  unitsMap,\r\n  baseUnit,\r\n  defaults,\r\n  conversionFormulas\r\n}\r\n\r\nexport default temperatureConstants;\r\n","import React from \"react\";\r\n\r\nimport UnitConverter from \"shared/components/unitConverter\";\r\nimport temperatureConstants from \"./constants\";\r\n\r\nfunction Temperature() {\r\n  return (\r\n    <UnitConverter\r\n      allUnitsMap={temperatureConstants.unitsMap}\r\n      defaults={temperatureConstants.defaults}\r\n      conversionFormulas={temperatureConstants.conversionFormulas}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Temperature;\r\n"],"names":["unitsMap","K","name","symbol","C","F","R","conversionFormulas","baseUnitCode","fromBaseTo","toNumber","round","toBaseFrom","baseUnit","defaults","inputCode","targetCode","favoriteCodes","Object","keys","_jsx","UnitConverter","allUnitsMap","temperatureConstants"],"sourceRoot":""}