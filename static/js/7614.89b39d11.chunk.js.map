{"version":3,"file":"static/js/7614.89b39d11.chunk.js","mappings":"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","sources":["pages/tools/time/clock/index.tsx","shared/components/clocks/index.tsx","shared/components/countryFlag/index.tsx","shared/helpers/timeZone/index.ts","shared/hooks/clocksData/index.ts","pages/tools/time/clock/styles.scss","webpack://mysite-dev/./src/shared/components/clocks/styles.scss?0e30","webpack://mysite-dev/./src/shared/components/countryFlag/styles.scss?2486"],"sourcesContent":["import React from \"react\";\n\nimport Clocks from \"shared/components/clocks\";\n// import useFuzzySearch from \"hooks/useFuzzySearch\";\n// import worldCountries from \"constants/worldCountries\";\n// import { fuzzySearch } from \"./utils\";\n// import { T_ArrayItem } from \"types/generic\";\nimport \"./styles.scss\";\n\nfunction Clock() {\n  // const { inputValue, fuzzySearchResults } = useFuzzySearch<\n  //   T_ArrayItem<typeof worldCountries>\n  // >(fuzzySearch, worldCountries);\n\n  return (\n    <div className=\"Clock\">\n      <Clocks\n        otherTimeZones={[\n          \"Asia/Kolkata\",\n          \"Pacific/Auckland\",\n          \"Asia/Ho_Chi_Minh\"\n        ]}\n      />\n      <div className=\"fix\"></div>\n    </div>\n  );\n}\n\nexport default Clock;\n","import React from \"react\";\n\nimport CountryFlag from \"shared/components/countryFlag\";\nimport { useClocksData } from \"shared/hooks/clocksData\";\n\nimport \"./styles.scss\";\n\nexport default function Clocks({ otherTimeZones }: T_ClocksProps) {\n  const clocksData = useClocksData(otherTimeZones);\n\n  return (\n    <div className=\"Clocks\">\n      {clocksData.map((clock) => (\n        <div key={clock.timeZoneName} className=\"clockWrap\">\n          <div className=\"clockMeta\">\n            <div className=\"clockMetaHeadWrap\">\n              <CountryFlag code={clock.countryCode} />\n              &nbsp;\n              <span className=\"clockMetaTitle\">{clock.countryName}</span>\n              &nbsp;\n              {clock.isLocal && (\n                <svg\n                  className=\"-mt-1 w-5 h-5\"\n                  fill=\"#bbb\"\n                  viewBox=\"0 0 20 20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"></path>\n                </svg>\n              )}\n            </div>\n            {clock.weekdayLong},<br /> {clock.day} {clock.monthLong}{\" \"}\n            {clock.year}\n          </div>\n          <div className=\"analog-clock\">\n            <div className=\"analog-clock-face\">\n              <div className=\"dots\"></div>\n              <div className=\"dots\"></div>\n              <div className=\"dots\"></div>\n              <div className=\"dots\"></div>\n              <div className=\"dots\"></div>\n              <div className=\"dots\"></div>\n              <div\n                style={{ transform: `rotate(${clock.hourDeg}deg)` }}\n                className=\"hand hour-hand\"\n              ></div>\n              <div\n                style={{ transform: `rotate(${clock.minuteDeg}deg)` }}\n                className=\"hand min-hand\"\n              ></div>\n              <div\n                style={{ transform: `rotate(${clock.secondDeg}deg)` }}\n                className=\"hand sec-hand\"\n              ></div>\n              {clock.isInDST && (\n                <i className=\"pt-2 text-center block tracking-wider text-gray-400 text-xs\">\n                  daylight\n                  <br />\n                  saving\n                </i>\n              )}\n            </div>\n          </div>\n          <div className=\"digital-clock\">\n            <div className=\"digit digit-hour\">{clock.hour}</div>\n            <span className=\"self-center text-gray-300 animate-ping\">:</span>\n            <div className=\"digit digit-min\">{clock.minute}</div>\n            <div className=\"digit digit-sec\">{clock.second}</div>\n            <div className=\"meridiem\">{clock.meridiem}</div>\n          </div>\n        </div>\n      ))}\n      <div className=\"clockWrap !justify-center transition duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-lg group cursor-pointer\">\n        <span className=\"self-center group-hover:scale-125 text-2xl\">âž•</span>\n      </div>\n    </div>\n  );\n}\n\ntype T_ClocksProps = {\n  otherTimeZones?: string[];\n};\n","import React from \"react\";\n\nimport \"./styles.scss\";\n\nexport default function CountryFlag({\n  code,\n  iconClassName = \"\",\n  wrapperClassName = \"\"\n}: T_CountryFlagProp) {\n  return (\n    <span className={wrapperClassName}>\n      <i\n        className={`countryFlagSprite countryFlag-${code.toLowerCase()} ${iconClassName}`}\n      ></i>\n    </span>\n  );\n}\n\nexport type T_CountryFlagProp = {\n  code: string;\n  wrapperClassName?: string;\n  iconClassName?: string;\n};\n","import { DateTime } from \"luxon\";\nimport worldCountries from \"shared/constants/worldCountries\";\nimport { T_ClockDataOfTimeZone } from \"./types\";\n\nexport function getClocksDataOfLocalAndOtherTimeZones(otherTimeZones?: string[]) {\n  const now = DateTime.now();\n  const clocksData = [getClockDataOfTimeZone(now)];\n  if (otherTimeZones) {\n    clocksData.push(\n      ...otherTimeZones.map((tz) => getClockDataOfTimeZone(now, tz))\n    );\n  }\n  return clocksData;\n}\n\nexport function getClockDataOfTimeZone(\n  datetime: DateTime,\n  timeZone?: string\n): T_ClockDataOfTimeZone {\n  const nowInTimeZone = timeZone ? datetime.setZone(timeZone) : datetime;\n  const {\n    // timeZone\n    zoneName,\n    offsetNameLong,\n    offsetNameShort,\n    // time\n    hour,\n    minute,\n    second,\n    isInDST,\n    // date\n    year,\n    monthShort,\n    monthLong,\n    day,\n    weekdayLong,\n    weekdayShort\n  } = nowInTimeZone;\n\n  const timeZoneName = standardizeTimeZoneName(zoneName);\n  const meridiem = nowInTimeZone.toFormat(\"a\");\n  const countryInfo = worldCountries.find(\n    (info) => info.timeZone === timeZoneName\n  ) || {\n    countryCode: \"\",\n    countryName: \"\"\n  };\n\n  return {\n    timeISOString: datetime.toISO(),\n    isLocal: !timeZone,\n    timeZoneName,\n    offsetNameLong,\n    offsetNameShort,\n    ...countryInfo,\n    hour: nowInTimeZone.toFormat(\"hh\"),\n    minute: nowInTimeZone.toFormat(\"mm\"),\n    second: nowInTimeZone.toFormat(\"ss\"),\n    meridiem,\n    isInDST,\n    year,\n    monthShort,\n    monthLong,\n    day,\n    weekdayLong,\n    weekdayShort,\n    hourDeg: (hour / 12) * 360 + (minute / 60) * 30 + 90,\n    minuteDeg: (minute / 60) * 360 + (second / 60) * 6 + 90,\n    secondDeg: (second / 60) * 360 + 90\n  };\n}\n\nexport const localTimeZoneName = standardizeTimeZoneName(DateTime.now().zoneName);\n\nexport function standardizeTimeZoneName(timeZoneName: string) {\n  return timeZoneName.replace(\n    // TODO: Stupid Chrome https://bugs.chromium.org/p/chromium/issues/detail?id=580195\n    \"Calcutta\",\n    \"Kolkata\"\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport { T_ClocksDataState } from \"shared/helpers/timeZone/types\";\nimport { getClocksDataOfLocalAndOtherTimeZones, localTimeZoneName } from \"shared/helpers/timeZone\";\n\nexport function useClocksData(otherTimeZones?: string[]) {\n  const otherTimeZonesOnly = otherTimeZones?.filter(\n    (tz) => localTimeZoneName !== tz\n  );\n\n  const [state, setState] = useState<T_ClocksDataState>(\n    getClocksDataOfLocalAndOtherTimeZones(otherTimeZonesOnly)\n  );\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setState(getClocksDataOfLocalAndOtherTimeZones(otherTimeZonesOnly));\n    }, 1000);\n    return () => clearInterval(intervalId);\n    // otherTimeZonesWithoutLocal is computed based on otherTimeZones\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [otherTimeZones]);\n\n  return state;\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["className","otherTimeZones","Clocks","clocksData","useClocksData","map","clock","code","countryCode","countryName","isLocal","fill","viewBox","xmlns","d","weekdayLong","day","monthLong","year","style","transform","hourDeg","minuteDeg","secondDeg","isInDST","hour","minute","second","meridiem","timeZoneName","CountryFlag","iconClassName","wrapperClassName","toLowerCase","getClocksDataOfLocalAndOtherTimeZones","now","DateTime","getClockDataOfTimeZone","push","tz","datetime","timeZone","nowInTimeZone","setZone","zoneName","offsetNameLong","offsetNameShort","monthShort","weekdayShort","standardizeTimeZoneName","toFormat","countryInfo","worldCountries","info","timeISOString","toISO","localTimeZoneName","replace","otherTimeZonesOnly","filter","useState","state","setState","useEffect","intervalId","setInterval","clearInterval"],"sourceRoot":""}