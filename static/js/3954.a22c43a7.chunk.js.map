{"version":3,"file":"static/js/3954.a22c43a7.chunk.js","mappings":"2HAAO,SAASA,EAASC,GACvB,OAAQA,CACV,CAEO,SAASC,EAAMC,GAAmD,IAA7BC,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACnE,OAAOL,EAASA,EAASG,GAAKK,QAAQJ,GACxC,C,qJCMe,SAASK,EACtBC,EACAC,GAEA,MAAMC,GAAkBC,EAAAA,EAAAA,aA8B1B,SAAyCH,GACvC,OAAO,SACLI,EAA2CC,GAEJ,IADtCC,EAAMC,GAA6BF,EAEpC,OAAQC,GACN,KAAKE,EAAAA,qBAAqBC,cACxB,MAAO,IACFL,EACHM,WAAYH,GAGhB,KAAKC,EAAAA,qBAAqBG,sBAAuB,CAAC,IAADC,EAC/C,MAAMC,EAAgBC,OAAOV,EAAMM,YAC7BK,EAAmBf,EAAYgB,OAAOH,GAG5C,OACEA,EAAcjB,OAAS,IACvBN,EAAAA,EAAAA,UAAiC,QAAzBsB,EAACR,EAAMa,0BAAkB,IAAAL,OAAA,EAAxBA,EAA0BhB,QAAU,GACjB,IAA5BmB,EAAiBnB,OAEVQ,EAGF,IACFA,EACHa,mBAAoBF,EAExB,CACA,QACE,OAAOX,EAEb,CACF,CAhEsCc,CAAclB,GAAc,CAC9DA,EACAC,KAEKG,EAAOe,IAAYC,EAAAA,EAAAA,YAAWlB,EAAiB,CACpDQ,WAAY,GACZO,mBAAoB,OAGhBI,GAA2BlB,EAAAA,EAAAA,cAC/BmB,EAAAA,EAAAA,WACE,IAAMH,EAAS,CAACX,EAAAA,qBAAqBG,yBACrCY,EAAAA,QAAaP,OAAOQ,uBAEtB,IAUF,MAAO,IACFpB,EACHqB,uBARAC,IAEAP,EAAS,CAACX,EAAAA,qBAAqBC,cAAeiB,EAAMC,OAAOC,QAC3DP,GAA0B,EAO9B,C,kBCvCO,IAAKb,E,2CAGX,SAHWA,GAAAA,EAAAA,EAAoB,iCAApBA,EAAAA,EAAoB,iDAG/B,CAHWA,IAAAA,EAAoB,I","sources":["shared/helpers/number.ts","shared/hooks/fuzzySearch/index.ts","shared/hooks/fuzzySearch/types.ts"],"sourcesContent":["export function toNumber(x: any) {\r\n  return +x;\r\n}\r\n\r\nexport function round(num: number | string, fractionDigits: number = 2) {\r\n  return toNumber(toNumber(num).toFixed(fractionDigits));\r\n}\r\n","import { useCallback, useReducer } from \"react\";\r\nimport Fuse from \"fuse.js\";\r\n\r\nimport {\r\n  E_FuzzySearchActions,\r\n  T_FuzzySearchAction,\r\n  T_FuzzySearchState\r\n} from \"./types\";\r\nimport { debounce } from \"shared/helpers/optimization\";\r\nimport { toNumber } from \"shared/helpers/number\";\r\nimport appConstants from \"shared/constants/app\";\r\n\r\nexport default function useFuzzySearch<T_SearchListItem>(\r\n  fuzzySearch: Fuse<T_SearchListItem>,\r\n  searchList: T_SearchListItem[]\r\n) {\r\n  const memoizedReducer = useCallback(createReducer(fuzzySearch), [\r\n    fuzzySearch,\r\n    searchList\r\n  ]);\r\n  const [state, dispatch] = useReducer(memoizedReducer, {\r\n    inputValue: \"\",\r\n    fuzzySearchResults: null\r\n  });\r\n\r\n  const updateFuzzySearchResults = useCallback(\r\n    debounce(\r\n      () => dispatch([E_FuzzySearchActions.setFuzzySearchResults]),\r\n      appConstants.search.inputDebounceInterval // Update search results if 100ms passed after user has stopped typing\r\n    ),\r\n    []\r\n  );\r\n\r\n  const handleInputValueChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    dispatch([E_FuzzySearchActions.setInputValue, event.target.value]);\r\n    updateFuzzySearchResults();\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    handleInputValueChange\r\n  };\r\n}\r\n\r\nfunction createReducer<T_SearchListItem>(fuzzySearch: Fuse<T_SearchListItem>) {\r\n  return function searchReducer(\r\n    state: T_FuzzySearchState<T_SearchListItem>,\r\n    [type, payload]: T_FuzzySearchAction\r\n  ): T_FuzzySearchState<T_SearchListItem> {\r\n    switch (type) {\r\n      case E_FuzzySearchActions.setInputValue: {\r\n        return {\r\n          ...state,\r\n          inputValue: payload\r\n        };\r\n      }\r\n      case E_FuzzySearchActions.setFuzzySearchResults: {\r\n        const inputValueStr = String(state.inputValue);\r\n        const newSearchResults = fuzzySearch.search(inputValueStr);\r\n\r\n        // Do not update state if new search results are empty\r\n        if (\r\n          inputValueStr.length > 2 &&\r\n          toNumber(state.fuzzySearchResults?.length) > 1 &&\r\n          newSearchResults.length === 0\r\n        ) {\r\n          return state;\r\n        }\r\n\r\n        return {\r\n          ...state,\r\n          fuzzySearchResults: newSearchResults\r\n        };\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n}\r\n","import Fuse from \"fuse.js\";\r\n\r\nimport { T_Nullable } from \"shared/types/generics\";\r\nimport { T_StringOrNumber } from \"shared/types/common\";\r\n\r\nexport enum E_FuzzySearchActions {\r\n  setInputValue,\r\n  setFuzzySearchResults\r\n}\r\n\r\nexport type T_FuzzySearchState<T_SearchListItem> = {\r\n  inputValue: T_StringOrNumber;\r\n  fuzzySearchResults: T_Nullable<Fuse.FuseResult<T_SearchListItem>[]>;\r\n};\r\n\r\nexport type T_FuzzySearchAction = [type: E_FuzzySearchActions, payload?: any];\r\n"],"names":["toNumber","x","round","num","fractionDigits","arguments","length","undefined","toFixed","useFuzzySearch","fuzzySearch","searchList","memoizedReducer","useCallback","state","_ref","type","payload","E_FuzzySearchActions","setInputValue","inputValue","setFuzzySearchResults","_state$fuzzySearchRes","inputValueStr","String","newSearchResults","search","fuzzySearchResults","createReducer","dispatch","useReducer","updateFuzzySearchResults","debounce","appConstants","inputDebounceInterval","handleInputValueChange","event","target","value"],"sourceRoot":""}