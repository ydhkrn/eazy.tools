{"version":3,"file":"static/js/6406.83370bed.chunk.js","mappings":"+RASO,SAASA,EACdC,EACAC,GAEA,MAAO,CACLC,GAAKF,EAAUE,GAAKD,EAAa,GAAMA,EACvCE,GAAKH,EAAUG,GAAKF,EAAa,GAAMA,EAE3C,CAGO,SAASG,EAAkBC,GAChC,MAAMC,EAAQ,CAAEJ,EAAG,EAAGC,EAAG,GAUzB,OARII,EAAAA,EAAAA,cAA4BF,IAC9BC,EAAMJ,EAAIG,EAAMG,cAAc,GAAGC,QACjCH,EAAMH,EAAIE,EAAMG,cAAc,GAAGE,UAEjCJ,EAAMJ,EAAIG,EAAMI,QAChBH,EAAMH,EAAIE,EAAMK,SAGXJ,CACT,CAEO,SAASK,EACdC,GAEA,GAAIA,EAAOC,QACT,MAAO,CACLX,EAAGU,EAAOC,QAAQC,wBAAwBC,MAAQ,EAClDZ,EAAGS,EAAOC,QAAQC,wBAAwBE,OAAS,EAGzD,CAEO,SAASC,EACdC,EACAN,GAEA,GAAIA,EAAOC,QACT,OAAOK,EAAeH,MAAQH,EAAOC,QAAQC,wBAAwBC,KAEzE,CAEO,SAASI,EAAyBC,GACvC,MAAMC,EAAUC,SAASC,iBAAiBH,EAASlB,EAAGkB,EAASjB,GAE/D,GAAIkB,EAAS,CAAC,IAADG,EACX,MAAMC,EAAWJ,EAAgBK,SAAWL,EAC5C,OAAoB,QAApBG,EAAOC,EAAQE,aAAK,IAAAH,EAAAA,EAAIC,EAAQG,EAClC,CAEA,MAAO,EACT,C","sources":["pages/blogs/travel/worldmap/helpers.ts"],"sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  T_Coordinates,\r\n  T_SVGEventType,\r\n  T_ViewBoxProps\r\n} from \"pages/blogs/travel/worldmap/types\";\r\nimport { isTouchEvent } from \"shared/helpers/dom\";\r\n\r\nexport function getCompensatoryTranslationForZoom(\r\n  zoomPoint: T_Coordinates,\r\n  zoomFactor: number\r\n): T_Coordinates {\r\n  return {\r\n    x: -(zoomPoint.x * (zoomFactor - 1)) / zoomFactor,\r\n    y: -(zoomPoint.y * (zoomFactor - 1)) / zoomFactor\r\n  };\r\n}\r\n\r\n// This function returns an object with X & Y values from the pointer event\r\nexport function getPointFromEvent(event: T_SVGEventType): T_Coordinates {\r\n  const point = { x: 0, y: 0 };\r\n  // If event is triggered by a touch event, we get the position of the first finger\r\n  if (isTouchEvent<SVGSVGElement>(event)) {\r\n    point.x = event.targetTouches[0].clientX;\r\n    point.y = event.targetTouches[0].clientY;\r\n  } else {\r\n    point.x = event.clientX;\r\n    point.y = event.clientY;\r\n  }\r\n\r\n  return point;\r\n}\r\n\r\nexport function getElementRectMidPoint(\r\n  svgRef: React.RefObject<SVGSVGElement>\r\n): T_Coordinates | void {\r\n  if (svgRef.current) {\r\n    return {\r\n      x: svgRef.current.getBoundingClientRect().width / 2,\r\n      y: svgRef.current.getBoundingClientRect().height / 2\r\n    };\r\n  }\r\n}\r\n\r\nexport function getWidthRatio(\r\n  initialViewBox: T_ViewBoxProps,\r\n  svgRef: React.RefObject<SVGSVGElement>\r\n): number | void {\r\n  if (svgRef.current) {\r\n    return initialViewBox.width / svgRef.current.getBoundingClientRect().width;\r\n  }\r\n}\r\n\r\nexport function getElementTitleFromPoint(position: T_Coordinates): string {\r\n  const element = document.elementFromPoint(position.x, position.y);\r\n\r\n  if (element) {\r\n    const dataObj = (element as any).dataset || element;\r\n    return dataObj.title ?? dataObj.id;\r\n  }\r\n\r\n  return \"\";\r\n}"],"names":["getCompensatoryTranslationForZoom","zoomPoint","zoomFactor","x","y","getPointFromEvent","event","point","isTouchEvent","targetTouches","clientX","clientY","getElementRectMidPoint","svgRef","current","getBoundingClientRect","width","height","getWidthRatio","initialViewBox","getElementTitleFromPoint","position","element","document","elementFromPoint","_dataObj$title","dataObj","dataset","title","id"],"sourceRoot":""}