{"version":3,"file":"static/js/2877.088ca00e.chunk.js","mappings":"8NA2FA,QArFA,WAAmB,IAADA,EAAAC,EAChB,MAAMC,GAAaC,EAAAA,EAAAA,QAAyB,MACtCC,GAAiBD,EAAAA,EAAAA,QAA4B,MAC7CE,GAAiBF,EAAAA,EAAAA,QAA4B,MAC7CG,GAAWH,EAAAA,EAAAA,QAAO,CAAEI,gBAAgB,EAAOC,gBAAgB,KAC1D,CAAEC,IAAiBC,EAAAA,EAAAA,UAAS,KAC5B,CAAEC,IAAmBD,EAAAA,EAAAA,UAAS,IAyCrC,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAC,0BACvCC,EAAAA,EAAAA,KAAA,SACEC,WAAS,EACTC,YAAY,0BACZJ,UAAU,WACVK,KAAK,OACLC,IAAKjB,KAEPU,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,YACEI,IAAKf,EACLS,UAAW,cACO,QAAhBb,EAAAM,EAASc,eAAO,IAAApB,GAAhBA,EAAkBO,eAAiB,aAAe,IAEpDU,YAAY,gBAEdL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mEAAkEC,SAAA,EAC/EC,EAAAA,EAAAA,KAAA,UAAQM,QA1DAC,KACd,IAAIC,EACJ,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EACFJ,EAAmBK,IAAAA,QACY,QADKJ,EACZ,QADYC,EAClCrB,EAAegB,eAAO,IAAAK,OAAA,EAAtBA,EAAwBI,aAAK,IAAAL,EAAAA,EAAI,GACR,QADUE,EACjB,QADiBC,EACnCzB,EAAWkB,eAAO,IAAAO,OAAA,EAAlBA,EAAoBE,aAAK,IAAAH,EAAAA,EAAI,IAC7BI,WACFxB,EAASc,QAASb,gBAAiB,CACrC,CAAE,MAAOwB,GAAQ,IAADC,EACd1B,EAASc,QAASb,gBAAiB,EACnCgB,EAAmB,UACQ,QADRS,EACX,OAALD,QAAK,IAALA,OAAK,EAALA,EAAiBE,eAAO,IAAAD,EAAAA,EAAI,qBAEjC,CAEA3B,EAAee,QAASS,MAAQN,EAChCd,EAAcc,EAAiB,EA0CCL,KAAK,SAASL,UAAU,MAAKC,SAAC,aAGxDC,EAAAA,EAAAA,KAAA,UAAQM,QA1CAa,KACd,IAAIC,EACJ,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EAKFJ,EAJcP,IAAAA,QACiB,QADAQ,EACP,QADOC,EAC7BhC,EAAee,eAAO,IAAAiB,OAAA,EAAtBA,EAAwBR,aAAK,IAAAO,EAAAA,EAAI,GACR,QADUE,EACjB,QADiBC,EACnCrC,EAAWkB,eAAO,IAAAmB,OAAA,EAAlBA,EAAoBV,aAAK,IAAAS,EAAAA,EAAI,IAENR,SAASU,KAClClC,EAASc,QAASZ,gBAAiB,CACrC,CAAE,MAAOuB,GAAQ,IAADU,EACdnC,EAASc,QAASZ,gBAAiB,EACnC2B,EAAmB,UACQ,QADRM,EACX,OAALV,QAAK,IAALA,OAAK,EAALA,EAAiBE,eAAO,IAAAQ,EAAAA,EAAI,qBAEjC,CAEArC,EAAegB,QAASS,MAAQM,EAChCxB,EAAgBwB,EAAiB,EAyBDjB,KAAK,SAASL,UAAU,MAAKC,SAAC,gBAI1DC,EAAAA,EAAAA,KAAA,YACEI,IAAKd,EACLQ,UAAW,cACO,QAAhBZ,EAAAK,EAASc,eAAO,IAAAnB,GAAhBA,EAAkBO,eAAiB,aAAe,IAEpDS,YAAY,wBAKtB,C,4DCxFA,SAAiB,C","sources":["pages/tools/crypto/index.tsx","pages/tools/crypto/styles.scss"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport CryptoAES from \"crypto-js/aes\";\r\nimport CryptoUTF8Enc from \"crypto-js/enc-utf8\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nfunction Crypto() {\r\n  const keyInputEl = useRef<HTMLInputElement>(null);\r\n  const encryptInputEl = useRef<HTMLTextAreaElement>(null);\r\n  const decryptInputEl = useRef<HTMLTextAreaElement>(null);\r\n  const errorRef = useRef({ isEncryptError: false, isDecryptError: false });\r\n  const [, setCipherText] = useState(\"\");\r\n  const [, setOriginalText] = useState(\"\");\r\n\r\n  const encrypt = () => {\r\n    let encryptionResult: string;\r\n    try {\r\n      encryptionResult = CryptoAES.encrypt(\r\n        encryptInputEl.current?.value ?? \"\",\r\n        keyInputEl.current?.value ?? \"\"\r\n      ).toString();\r\n      errorRef.current!.isEncryptError = false;\r\n    } catch (error) {\r\n      errorRef.current!.isEncryptError = true;\r\n      encryptionResult = `ERROR::${\r\n        (error as Error)?.message ?? \"Failed to encrypt\"\r\n      }`;\r\n    }\r\n\r\n    decryptInputEl.current!.value = encryptionResult;\r\n    setCipherText(encryptionResult);\r\n  };\r\n\r\n  const decrypt = () => {\r\n    let decryptionResult: string;\r\n    try {\r\n      const bytes = CryptoAES.decrypt(\r\n        decryptInputEl.current?.value ?? \"\",\r\n        keyInputEl.current?.value ?? \"\"\r\n      );\r\n      decryptionResult = bytes.toString(CryptoUTF8Enc);\r\n      errorRef.current!.isDecryptError = false;\r\n    } catch (error) {\r\n      errorRef.current!.isDecryptError = true;\r\n      decryptionResult = `ERROR::${\r\n        (error as Error)?.message ?? \"Failed to decrypt\"\r\n      }`;\r\n    }\r\n\r\n    encryptInputEl.current!.value = decryptionResult;\r\n    setOriginalText(decryptionResult);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Crypto\">\r\n      <h1 className=\"font-bold text-xl py-4\">AES (CBC w/o PBKDF2)</h1>\r\n      <input\r\n        autoFocus\r\n        placeholder=\"Secret Key &#128477;\"\r\n        className=\"keyInput\"\r\n        type=\"text\"\r\n        ref={keyInputEl}\r\n      />\r\n      <form className=\"form\">\r\n        <textarea\r\n          ref={encryptInputEl}\r\n          className={`textInput ${\r\n            errorRef.current?.isEncryptError ? \"bg-red-200\" : \"\"\r\n          }`}\r\n          placeholder=\"Plain text\"\r\n        />\r\n        <div className=\"flex space-x-5 flex-nowrap sm:space-x-0 sm:flex-col sm:flex-wrap\">\r\n          <button onClick={encrypt} type=\"button\" className=\"btn\">\r\n            Encrypt\r\n          </button>\r\n          <button onClick={decrypt} type=\"button\" className=\"btn\">\r\n            Decrypt\r\n          </button>\r\n        </div>\r\n        <textarea\r\n          ref={decryptInputEl}\r\n          className={`textInput ${\r\n            errorRef.current?.isDecryptError ? \"bg-red-200\" : \"\"\r\n          }`}\r\n          placeholder=\"Encrypted text\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Crypto;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_errorRef$current","_errorRef$current2","keyInputEl","useRef","encryptInputEl","decryptInputEl","errorRef","isEncryptError","isDecryptError","setCipherText","useState","setOriginalText","_jsxs","className","children","_jsx","autoFocus","placeholder","type","ref","current","onClick","encrypt","encryptionResult","_encryptInputEl$curre","_encryptInputEl$curre2","_keyInputEl$current$v","_keyInputEl$current","CryptoAES","value","toString","error","_message","message","decrypt","decryptionResult","_decryptInputEl$curre","_decryptInputEl$curre2","_keyInputEl$current$v2","_keyInputEl$current2","CryptoUTF8Enc","_message2"],"sourceRoot":""}